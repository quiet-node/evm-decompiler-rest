import fs from 'fs';
import express from 'express';
import { exec } from 'child_process';

const decompilerRouter = express.Router();

// @route: POST api/decompile
// @desc: attempts to decompile EVM bytecode into Soldiity smart contract
// @access: public
decompilerRouter.post('/', (req, res) => {
  const bytecode = req.body.bytecode;

  if (bytecode) {
    const HEIMDALL_OUTPUT_PATH = './output/local/decompiled.sol';

    console.log('Decompiling...');
    const DECOMPILE_COMMAND = `heimdall decompile --include-sol ${bytecode}`;
    exec(DECOMPILE_COMMAND, (error, stdout, stderr) => {
      if (error) {
        console.error(`Error: ${error.message}\nDone.`);
        return res.status(500).send({
          erorr: `Error: ${error.message}`,
          decompiled: null,
        });
      }
      if (stderr) {
        console.error(`stderr: ${stderr}\nDone.`);
        return res.status(500).send({
          error: `stderr: ${stderr}`,
          decompiled: null,
        });
      }

      // error returned by heimdall
      if (stdout.includes('error')) {
        console.error(
          stdout.replace('.\n', '').trim() +
            `.\nnotice: only accept runtime bytecode.\nDone.`
        );
        return res.status(400).json({
          error:
            stdout.replace('.\n', '').trim() +
            `.\nnotice: only accept runtime bytecode.`,
          decompiled: null,
        });
      }

      try {
        const decompiled = fs
          .readFileSync(HEIMDALL_OUTPUT_PATH)
          .toLocaleString();

        // remove cache generated by heimdall
        if (fs.existsSync(HEIMDALL_OUTPUT_PATH)) {
          console.log('Deleting cached output folder generated by heimdall...');
          exec('rm -rf output/');
        }

        console.log('Sending decompiled Solidity contract to client...\nDone.');
        return res.send({
          decompiled,
          error: null,
        });
      } catch (error) {
        console.error(error);
        console.log('Done.');
        return res.status(500).send({
          error: `Heimdall-rs did not exported data after decompilation.\nDone.`,
          decompiled: null,
        });
      }
    });
  }
});

export default decompilerRouter;
